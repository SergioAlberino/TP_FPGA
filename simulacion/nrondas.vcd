$date
  Wed Apr 14 16:05:39 2021
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$var reg 8 ! r_i_tb[7:0] $end
$var reg 8 " l_i_tb[7:0] $end
$var reg 8 # k_i_tb[7:0] $end
$var reg 8 $ qr_tb[7:0] $end
$var reg 8 % ql_tb[7:0] $end
$scope module dut $end
$var reg 8 & r_i[7:0] $end
$var reg 8 ' l_i[7:0] $end
$var reg 8 ( k_i[7:0] $end
$var reg 8 ) qr_o[7:0] $end
$var reg 8 * ql_o[7:0] $end
$comment raux is not handled $end
$comment laux is not handled $end
$comment k is not handled $end
$scope module ronda_ins_0 $end
$var reg 8 + r_i[7:0] $end
$var reg 8 , l_i[7:0] $end
$var reg 8 - k_i[7:0] $end
$var reg 8 . qr_o[7:0] $end
$var reg 8 / ql_o[7:0] $end
$upscope $end
$scope module ronda_ins_1 $end
$var reg 8 0 r_i[7:0] $end
$var reg 8 1 l_i[7:0] $end
$var reg 8 2 k_i[7:0] $end
$var reg 8 3 qr_o[7:0] $end
$var reg 8 4 ql_o[7:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b00000000 !
b00000000 "
b00000000 #
b00000000 $
b10101010 %
b00000000 &
b00000000 '
b00000000 (
b00000000 )
b10101010 *
b00000000 +
b00000000 ,
b10101010 -
b10101010 .
b00000000 /
b10101010 0
b00000000 1
b10101010 2
b00000000 3
b10101010 4
#100000000
b10101010 !
b00000000 %
b10101010 &
b00000000 *
b10101010 +
b00000000 .
b10101010 /
b00000000 0
b10101010 1
b00000000 4
#200000000
b00001111 "
b00001111 $
b00001111 %
b00001111 '
b00001111 )
b00001111 *
b00001111 ,
b00001111 .
b00001111 0
b00001111 3
b00001111 4
#400000000
#500000000
b11110000 !
b01010101 %
b11110000 &
b01010101 *
b11110000 +
b01010101 .
b11110000 /
b01010101 0
b11110000 1
b01010101 4
